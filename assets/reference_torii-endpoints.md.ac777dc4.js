import{_ as s,o as n,c as a,Q as e}from"./chunks/framework.1293becd.js";const h=JSON.parse('{"title":"Torii Endpoints","description":"","frontmatter":{},"headers":[],"relativePath":"reference/torii-endpoints.md","filePath":"reference/torii-endpoints.md","lastUpdated":1702457319000}'),o={name:"reference/torii-endpoints.md"},t=e(`<h1 id="torii-endpoints" tabindex="-1">Torii Endpoints <a class="header-anchor" href="#torii-endpoints" aria-label="Permalink to &quot;Torii Endpoints&quot;">​</a></h1><h2 id="api-version" tabindex="-1">API Version <a class="header-anchor" href="#api-version" aria-label="Permalink to &quot;API Version&quot;">​</a></h2><ul><li><strong>Protocol:</strong> HTTP</li><li><strong>Method:</strong> <code>GET</code></li><li><strong>Endpoint:</strong> <code>/api_version</code></li></ul><p><strong>Responses:</strong></p><p><code>200 OK</code>: The current version of API used by Iroha returned as a JSON string. Grabbed from the genesis block&#39;s version, so at least a minimal subnet of 4 peers should be running and the genesis be submitted at the time of request.</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;1&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;1&quot;</span></span></code></pre></div><h2 id="blocks-stream" tabindex="-1">Blocks Stream <a class="header-anchor" href="#blocks-stream" aria-label="Permalink to &quot;Blocks Stream&quot;">​</a></h2><ul><li><strong>Protocol:</strong> HTTP</li><li><strong>Protocol Upgrade:</strong>\`WebSocket</li><li><strong>Endpoint:</strong> <code>/block/stream</code></li></ul><p>The client should send a <a href="/iroha-2-docs/reference/data-model-schema.html#blocksubscriptionrequest"><code>BlockSubscriptionRequest</code></a> to initiate communication after the WebSocket handshake. Then the server sends a <a href="/iroha-2-docs/reference/data-model-schema.html#blockmessage"><code>BlockMessage</code></a>. Messages are SCALE-encoded<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>.</p><p>Via this endpoint, the client first provides the starting block number (i.e. height) in the subscription request. After sending the confirmation message, the server starts streaming all the blocks from the given block number up to the current block and continues to stream blocks as they are added to the blockchain.</p><h2 id="configuration-retrieve" tabindex="-1">Configuration / Retrieve <a class="header-anchor" href="#configuration-retrieve" aria-label="Permalink to &quot;Configuration / Retrieve&quot;">​</a></h2><ul><li><strong>Protocol:</strong> HTTP</li><li><strong>Method:</strong> <code>GET</code></li><li><strong>Endpoint:</strong> <code>/configuration</code></li><li><strong>Responses:</strong> with a JSON-serialized subset of configuration parameters. The subset of returned parameters is equal to the one accepted by the <a href="#configuration-update">Configuration &gt; Update endpoint</a>, i.e. it only contains the <code>logger.level</code> parameter as of now.</li></ul><p><strong>Example response:</strong></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;logger&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;level&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;TRACE&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;logger&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;level&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;TRACE&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="configuration-update" tabindex="-1">Configuration / Update <a class="header-anchor" href="#configuration-update" aria-label="Permalink to &quot;Configuration / Update&quot;">​</a></h2><ul><li><strong>Protocol:</strong> HTTP</li><li><strong>Method:</strong> <code>POST</code></li><li><strong>Endpoint:</strong> <code>/configuration</code></li><li><strong>Expects:</strong> a JSON-serialized subset of configuration parameters.</li><li><strong>Response:</strong> <code>202 ACCEPTED</code></li></ul><p>This endpoint only supports dynamic updating of the <code>logger.level</code> parameter for now.</p><p>For possible values please refer to the configuration reference (TODO: <a href="https://github.com/hyperledger/iroha-2-docs/issues/392" target="_blank" rel="noreferrer">Tracking issue for configuration reference</a>).</p><p><strong>Example request:</strong></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;logger&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;level&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;DEBUG&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;logger&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;level&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;DEBUG&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Guarantees</p><p>A successful configuration update does not guarantee that the configuration is indeed updated. While consecutive <a href="#configuration-retrieve">configuration retrievals</a> will return updated values, the actual update is performed asynchronously.</p></div><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h2><ul><li><strong>Protocol:</strong> HTTP</li><li><strong>Protocol Upgrade:</strong> WebSocket</li><li><strong>Endpoint:</strong> <code>/events</code></li></ul><p>After a handshake, the client should send an <a href="/iroha-2-docs/reference/data-model-schema.html#eventsubscriptionrequest"><code>EventSubscriptionRequest</code></a>. Then the server sends an <a href="/iroha-2-docs/reference/data-model-schema.html#eventmessage"><code>EventMessage</code></a>. Messages are SCALE-encoded<sup class="footnote-ref"><a href="#fn1" id="fnref1:1">[1:1]</a></sup>.</p><h3 id="transaction-events" tabindex="-1">Transaction Events <a class="header-anchor" href="#transaction-events" aria-label="Permalink to &quot;Transaction Events&quot;">​</a></h3><p>Transaction event statuses can be either <code>Validating</code>, <code>Committed</code> or <code>Rejected</code>.</p><p>Transaction statuses proceed from <code>Validating</code> to either <code>Committed</code> or <code>Rejected</code>. However, due to the distributed nature of the network, some peers might receive events out of order (e.g. <code>Committed</code> before <code>Validating</code>).</p><p>Some peers in the network may be offline for the validation round. If the client connects to them while they are offline, the peers might not respond with the <code>Validating</code> status. But when the offline peers come back online they will synchronize the blocks. They are then guaranteed to respond with the <code>Committed</code> (or <code>Rejected</code>) status depending on the information found in the block.</p><h2 id="health" tabindex="-1">Health <a class="header-anchor" href="#health" aria-label="Permalink to &quot;Health&quot;">​</a></h2><ul><li><strong>Protocol:</strong> HTTP</li><li><strong>Method:</strong> <code>GET</code></li><li><strong>Endpoint:</strong> <code>/health</code></li></ul><p>Responses with <code>200 OK</code> and a current status of peer as a JSON string:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;Healthy&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;Healthy&quot;</span></span></code></pre></div><h2 id="metrics" tabindex="-1">Metrics <a class="header-anchor" href="#metrics" aria-label="Permalink to &quot;Metrics&quot;">​</a></h2><ul><li><strong>Protocol:</strong> HTTP</li><li><strong>Method:</strong> <code>GET</code></li><li><strong>Endpoint:</strong> <code>/metrics</code></li></ul><p><strong>Responses:</strong></p><p><code>200 OK</code> reports 8 of 10 metrics:</p><details class="details custom-block"><summary>Sample Prometheus metrics</summary><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># HELP accounts User accounts registered at this time</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE accounts gauge</span></span>
<span class="line"><span style="color:#B392F0;">accounts</span><span style="color:#E1E4E8;">{domain=</span><span style="color:#B392F0;">&quot;genesis&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#B392F0;">accounts</span><span style="color:#E1E4E8;">{domain=</span><span style="color:#B392F0;">&quot;wonderland&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#6A737D;"># HELP block_height Current block height</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE block_height counter</span></span>
<span class="line"><span style="color:#B392F0;">block_height</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#6A737D;"># HELP connected_peers Total number of currently connected peers</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE connected_peers gauge</span></span>
<span class="line"><span style="color:#B392F0;">connected_peers</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#6A737D;"># HELP domains Total number of domains</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE domains gauge</span></span>
<span class="line"><span style="color:#B392F0;">domains</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#6A737D;"># HELP tx_amount average amount involved in a transaction on this peer</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE tx_amount histogram</span></span>
<span class="line"><span style="color:#B392F0;">tx_amount_bucket</span><span style="color:#E1E4E8;">{le=</span><span style="color:#B392F0;">&quot;0.005&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">tx_amount_bucket</span><span style="color:#E1E4E8;">{le=</span><span style="color:#B392F0;">&quot;0.01&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">tx_amount_bucket</span><span style="color:#E1E4E8;">{le=</span><span style="color:#B392F0;">&quot;0.025&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">tx_amount_bucket</span><span style="color:#E1E4E8;">{le=</span><span style="color:#B392F0;">&quot;0.05&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">tx_amount_bucket</span><span style="color:#E1E4E8;">{le=</span><span style="color:#B392F0;">&quot;0.1&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">tx_amount_bucket</span><span style="color:#E1E4E8;">{le=</span><span style="color:#B392F0;">&quot;0.25&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">tx_amount_bucket</span><span style="color:#E1E4E8;">{le=</span><span style="color:#B392F0;">&quot;0.5&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">tx_amount_bucket</span><span style="color:#E1E4E8;">{le=</span><span style="color:#B392F0;">&quot;1&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">tx_amount_bucket</span><span style="color:#E1E4E8;">{le=</span><span style="color:#B392F0;">&quot;2.5&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">tx_amount_bucket</span><span style="color:#E1E4E8;">{le=</span><span style="color:#B392F0;">&quot;5&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">tx_amount_bucket</span><span style="color:#E1E4E8;">{le=</span><span style="color:#B392F0;">&quot;10&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">tx_amount_bucket</span><span style="color:#E1E4E8;">{le=</span><span style="color:#B392F0;">&quot;+Inf&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#B392F0;">tx_amount_sum</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">26</span></span>
<span class="line"><span style="color:#B392F0;">tx_amount_count</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#6A737D;"># HELP txs Transactions committed</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE txs counter</span></span>
<span class="line"><span style="color:#B392F0;">txs</span><span style="color:#E1E4E8;">{</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#B392F0;">&quot;accepted&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#B392F0;">txs</span><span style="color:#E1E4E8;">{</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#B392F0;">&quot;rejected&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">txs</span><span style="color:#E1E4E8;">{</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#B392F0;">&quot;total&quot;</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#6A737D;"># HELP uptime_since_genesis_ms Network up-time, from creation of the genesis block</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE uptime_since_genesis_ms gauge</span></span>
<span class="line"><span style="color:#B392F0;">uptime_since_genesis_ms</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">54572974</span></span>
<span class="line"><span style="color:#6A737D;"># HELP view_changes Number of view_changes in the current round</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE view_changes gauge</span></span>
<span class="line"><span style="color:#B392F0;">view_changes</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># HELP accounts User accounts registered at this time</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE accounts gauge</span></span>
<span class="line"><span style="color:#6F42C1;">accounts</span><span style="color:#24292E;">{domain=</span><span style="color:#6F42C1;">&quot;genesis&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#6F42C1;">accounts</span><span style="color:#24292E;">{domain=</span><span style="color:#6F42C1;">&quot;wonderland&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#6A737D;"># HELP block_height Current block height</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE block_height counter</span></span>
<span class="line"><span style="color:#6F42C1;">block_height</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#6A737D;"># HELP connected_peers Total number of currently connected peers</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE connected_peers gauge</span></span>
<span class="line"><span style="color:#6F42C1;">connected_peers</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6A737D;"># HELP domains Total number of domains</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE domains gauge</span></span>
<span class="line"><span style="color:#6F42C1;">domains</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#6A737D;"># HELP tx_amount average amount involved in a transaction on this peer</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE tx_amount histogram</span></span>
<span class="line"><span style="color:#6F42C1;">tx_amount_bucket</span><span style="color:#24292E;">{le=</span><span style="color:#6F42C1;">&quot;0.005&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">tx_amount_bucket</span><span style="color:#24292E;">{le=</span><span style="color:#6F42C1;">&quot;0.01&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">tx_amount_bucket</span><span style="color:#24292E;">{le=</span><span style="color:#6F42C1;">&quot;0.025&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">tx_amount_bucket</span><span style="color:#24292E;">{le=</span><span style="color:#6F42C1;">&quot;0.05&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">tx_amount_bucket</span><span style="color:#24292E;">{le=</span><span style="color:#6F42C1;">&quot;0.1&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">tx_amount_bucket</span><span style="color:#24292E;">{le=</span><span style="color:#6F42C1;">&quot;0.25&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">tx_amount_bucket</span><span style="color:#24292E;">{le=</span><span style="color:#6F42C1;">&quot;0.5&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">tx_amount_bucket</span><span style="color:#24292E;">{le=</span><span style="color:#6F42C1;">&quot;1&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">tx_amount_bucket</span><span style="color:#24292E;">{le=</span><span style="color:#6F42C1;">&quot;2.5&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">tx_amount_bucket</span><span style="color:#24292E;">{le=</span><span style="color:#6F42C1;">&quot;5&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">tx_amount_bucket</span><span style="color:#24292E;">{le=</span><span style="color:#6F42C1;">&quot;10&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">tx_amount_bucket</span><span style="color:#24292E;">{le=</span><span style="color:#6F42C1;">&quot;+Inf&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#6F42C1;">tx_amount_sum</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">26</span></span>
<span class="line"><span style="color:#6F42C1;">tx_amount_count</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#6A737D;"># HELP txs Transactions committed</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE txs counter</span></span>
<span class="line"><span style="color:#6F42C1;">txs</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">=</span><span style="color:#6F42C1;">&quot;accepted&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#6F42C1;">txs</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">=</span><span style="color:#6F42C1;">&quot;rejected&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">txs</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">=</span><span style="color:#6F42C1;">&quot;total&quot;</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#6A737D;"># HELP uptime_since_genesis_ms Network up-time, from creation of the genesis block</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE uptime_since_genesis_ms gauge</span></span>
<span class="line"><span style="color:#6F42C1;">uptime_since_genesis_ms</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">54572974</span></span>
<span class="line"><span style="color:#6A737D;"># HELP view_changes Number of view_changes in the current round</span></span>
<span class="line"><span style="color:#6A737D;"># TYPE view_changes gauge</span></span>
<span class="line"><span style="color:#6F42C1;">view_changes</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span></code></pre></div></details><p>Learn <a href="/iroha-2-docs/guide/advanced/metrics.html">how to use metrics</a>.</p><h2 id="query" tabindex="-1">Query <a class="header-anchor" href="#query" aria-label="Permalink to &quot;Query&quot;">​</a></h2><ul><li><strong>Protocol:</strong> HTTP</li><li><strong>Method:</strong> <code>POST</code></li><li><strong>Endpoint:</strong> <code>/query</code></li><li><strong>Expects:</strong><ul><li><strong>Body:</strong> SCALE-encoded<sup class="footnote-ref"><a href="#fn1" id="fnref1:2">[1:2]</a></sup> <a href="/iroha-2-docs/reference/data-model-schema.html#versionedsignedquery"><code>VersionedSignedQuery</code></a></li><li><strong>Query parameters:</strong><ul><li><strong><code>start</code>:</strong> An optional parameter in queries where results can be indexed. Use to return results from a specified point. Results are ordered by id, which uses Rust&#39;s <a href="https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html#derivable" target="_blank" rel="noreferrer">PartialOrd</a> and <a href="https://doc.rust-lang.org/std/cmp/trait.Ord.html" target="_blank" rel="noreferrer">Ord</a> traits.</li><li><strong><code>limit</code>:</strong> An optional parameter in queries where results can be indexed. Use to return a specific number of results.</li><li><strong><code>sort_by_metadata_key</code>:</strong> An optional parameter in queries. Use to sort results containing metadata with a given key.</li><li><strong><code>fetch_size</code>:</strong> An optional parameter in queries. Use it to specify the exact number of results returned by a query.</li></ul></li></ul></li></ul><p><strong>Responses:</strong></p><table><thead><tr><th>Response</th><th>Status</th><th>Body</th></tr></thead><tbody><tr><td>Success</td><td>200</td><td><a href="/iroha-2-docs/reference/data-model-schema.html#versionedbatchedresponse-value"><code>VersionedBatchedResponse&lt;Value&gt;</code></a></td></tr><tr><td>Conversion Error</td><td>400</td><td><a href="/iroha-2-docs/reference/data-model-schema.html#queryexecutionfail"><code>QueryExecutionFail::Conversion(String)</code></a></td></tr><tr><td>Evaluate Error</td><td>400</td><td><a href="/iroha-2-docs/reference/data-model-schema.html#queryexecutionfail"><code>QueryExecutionFail::Evaluate(String)</code></a></td></tr><tr><td>Signature Error</td><td>401</td><td><a href="/iroha-2-docs/reference/data-model-schema.html#queryexecutionfail"><code>QueryExecutionFail::Signature(String)</code></a></td></tr><tr><td>Permission Error</td><td>403</td><td><a href="/iroha-2-docs/reference/data-model-schema.html#queryexecutionfail"><code>QueryExecutionFail::Permission(String)</code></a></td></tr><tr><td>Find Error</td><td>404</td><td><a href="/iroha-2-docs/reference/data-model-schema.html#queryexecutionfail"><code>QueryExecutionFail::Find(FindError)</code></a></td></tr></tbody></table><h3 id="account-not-found-404" tabindex="-1">Account Not Found 404 <a class="header-anchor" href="#account-not-found-404" aria-label="Permalink to &quot;Account Not Found 404&quot;">​</a></h3><p>Whether each prerequisite object was found and <a href="/iroha-2-docs/reference/data-model-schema.html#finderror"><code>FindError</code></a>:</p><table><thead><tr><th style="text-align:center;">Domain</th><th style="text-align:center;">Account</th><th><a href="/iroha-2-docs/reference/data-model-schema.html#finderror"><code>FindError</code></a></th></tr></thead><tbody><tr><td style="text-align:center;">N</td><td style="text-align:center;">-</td><td><a href="/iroha-2-docs/reference/data-model-schema.html#finderror"><code>FindError::Domain(DomainId)</code></a></td></tr><tr><td style="text-align:center;">Y</td><td style="text-align:center;">N</td><td><a href="/iroha-2-docs/reference/data-model-schema.html#finderror"><code>FindError::Account(AccountId)</code></a></td></tr></tbody></table><h3 id="asset-not-found-404" tabindex="-1">Asset Not Found 404 <a class="header-anchor" href="#asset-not-found-404" aria-label="Permalink to &quot;Asset Not Found 404&quot;">​</a></h3><p>Whether each prerequisite object was found and <a href="/iroha-2-docs/reference/data-model-schema.html#finderror"><code>FindError</code></a>:</p><table><thead><tr><th style="text-align:center;">Domain</th><th style="text-align:center;">Account</th><th style="text-align:center;">Asset Definition</th><th style="text-align:center;">Asset</th><th><a href="/iroha-2-docs/reference/data-model-schema.html#finderror"><code>FindError</code></a></th></tr></thead><tbody><tr><td style="text-align:center;">N</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td><a href="/iroha-2-docs/reference/data-model-schema.html#finderror"><code>FindError::Domain(DomainId)</code></a></td></tr><tr><td style="text-align:center;">Y</td><td style="text-align:center;">N</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td><a href="/iroha-2-docs/reference/data-model-schema.html#finderror"><code>FindError::Account(AccountId)</code></a></td></tr><tr><td style="text-align:center;">Y</td><td style="text-align:center;">-</td><td style="text-align:center;">N</td><td style="text-align:center;">-</td><td><a href="/iroha-2-docs/reference/data-model-schema.html#finderror"><code>FindError::AssetDefinition(AssetDefinitionId)</code></a></td></tr><tr><td style="text-align:center;">Y</td><td style="text-align:center;">Y</td><td style="text-align:center;">Y</td><td style="text-align:center;">N</td><td><a href="/iroha-2-docs/reference/data-model-schema.html#finderror"><code>FindError::Asset(AssetId)</code></a></td></tr></tbody></table><h2 id="status" tabindex="-1">Status <a class="header-anchor" href="#status" aria-label="Permalink to &quot;Status&quot;">​</a></h2><ul><li><strong>Protocol:</strong> HTTP</li><li><strong>Method:</strong> <code>GET</code></li><li><strong>Endpoint:</strong> <code>/status</code></li><li><strong>Expects:</strong> an optional <code>Accept: application/x-parity-scale</code> request header to encode response with SCALE<sup class="footnote-ref"><a href="#fn1" id="fnref1:3">[1:3]</a></sup>. Otherwise, will fall back to <code>application/json</code>.</li><li><strong>Responses</strong>: with <code>Content-Type</code> set either to <code>application/json</code> or <code>application/x-parity-scale</code>, and an accordingly encoded response body.</li></ul><p>Response body is of the following <code>Status</code> structure:</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">struct</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Status</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    /// Number of connected peers, except for the reporting peer itself</span></span>
<span class="line"><span style="color:#E1E4E8;">    peers</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">u64</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#6A737D;">    /// Number of committed blocks</span></span>
<span class="line"><span style="color:#E1E4E8;">    blocks</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">u64</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#6A737D;">    /// Number of accepted transactions</span></span>
<span class="line"><span style="color:#E1E4E8;">    txs_accepted</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">u64</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#6A737D;">    /// Number of rejected transactions</span></span>
<span class="line"><span style="color:#E1E4E8;">    txs_rejected</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">u64</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#6A737D;">    /// Uptime since genesis block creation</span></span>
<span class="line"><span style="color:#E1E4E8;">    uptime</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Uptime</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#6A737D;">    /// Number of view changes in the current round</span></span>
<span class="line"><span style="color:#E1E4E8;">    view_changes</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">u64</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#6A737D;">    /// Number of the transactions in the queue</span></span>
<span class="line"><span style="color:#E1E4E8;">    queue_size</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">u64</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">struct</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Uptime</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    secs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">u64</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    nanos</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">u32</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Status</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    /// Number of connected peers, except for the reporting peer itself</span></span>
<span class="line"><span style="color:#24292E;">    peers</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">u64</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#6A737D;">    /// Number of committed blocks</span></span>
<span class="line"><span style="color:#24292E;">    blocks</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">u64</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#6A737D;">    /// Number of accepted transactions</span></span>
<span class="line"><span style="color:#24292E;">    txs_accepted</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">u64</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#6A737D;">    /// Number of rejected transactions</span></span>
<span class="line"><span style="color:#24292E;">    txs_rejected</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">u64</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#6A737D;">    /// Uptime since genesis block creation</span></span>
<span class="line"><span style="color:#24292E;">    uptime</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Uptime</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#6A737D;">    /// Number of view changes in the current round</span></span>
<span class="line"><span style="color:#24292E;">    view_changes</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">u64</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#6A737D;">    /// Number of the transactions in the queue</span></span>
<span class="line"><span style="color:#24292E;">    queue_size</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">u64</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Uptime</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    secs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">u64</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    nanos</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">u32</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">JSON Precision Lost</p><p>Almost all fields in the <code>Status</code> structure are 64-bit integers, and they are encoded in JSON as-is. Since native JSON&#39;s number type according to the specification effectively is <code>f64</code>, the precision might be lost on deserialization, for example, in <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse" target="_blank" rel="noreferrer">JavaScript&#39;s <code>JSON.parse</code></a>. For more details, see related <a href="https://github.com/hyperledger/iroha/issues/3964" target="_blank" rel="noreferrer">issue</a>.</p></div><div class="tip custom-block"><p class="custom-block-title">Compact Form in SCALE</p><p>Fields with type <code>u64</code> serialized in the <a href="https://docs.substrate.io/reference/scale-codec/#fn-1" target="_blank" rel="noreferrer">Compact form</a>.</p></div><details class="details custom-block"><summary>Sample responses</summary><p>These samples represent the same data:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-sur6h" id="tab-UypAW2T" checked="checked"><label for="tab-UypAW2T">JSON</label><input type="radio" name="group-sur6h" id="tab-GbwjYrk"><label for="tab-GbwjYrk">SCALE</label></div><div class="blocks"><div class="language-json vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;peers&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;blocks&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;txs_accepted&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">31</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;txs_rejected&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;uptime&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;secs&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;nanos&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">937000000</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;view_changes&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;queue_size&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">18</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;peers&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;blocks&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;txs_accepted&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">31</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;txs_rejected&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;uptime&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;secs&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;nanos&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">937000000</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;view_changes&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;queue_size&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">18</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">10 14 7C 0C 14 40 7C D9 37 08 48</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">10 14 7C 0C 14 40 7C D9 37 08 48</span></span></code></pre></div></div></div></details><h3 id="sub-routing" tabindex="-1">Sub-routing <a class="header-anchor" href="#sub-routing" aria-label="Permalink to &quot;Sub-routing&quot;">​</a></h3><p>To obtain the value of a specific field, one can append the name of the field to the path, e.g. <code>/status/peers</code>. This returns the corresponding JSON value.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-xaonT" id="tab-etl76tr" checked="checked"><label for="tab-etl76tr">/status/peers</label><input type="radio" name="group-xaonT" id="tab-a-OVeGT"><label for="tab-a-OVeGT">/status/uptime</label><input type="radio" name="group-xaonT" id="tab-5QYBkBF"><label for="tab-5QYBkBF">/status/uptime/secs</label></div><div class="blocks"><div class="language-json vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">4</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">4</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;secs&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;nanos&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">937000000</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;secs&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;nanos&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">937000000</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">5</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">5</span></span></code></pre></div></div></div><h2 id="transaction" tabindex="-1">Transaction <a class="header-anchor" href="#transaction" aria-label="Permalink to &quot;Transaction&quot;">​</a></h2><ul><li><strong>Protocol:</strong> HTTP</li><li><strong>Method:</strong> <code>POST</code></li><li><strong>Endpoint:</strong> <code>/transaction</code></li><li><strong>Expects:</strong><ul><li><strong>Body:</strong> SCALE-encoded<sup class="footnote-ref"><a href="#fn1" id="fnref1:4">[1:4]</a></sup> <a href="/iroha-2-docs/reference/data-model-schema.html#versionedsignedtransaction"><code>VersionedSignedTransaction</code></a></li></ul></li></ul><p><strong>Responses:</strong></p><table><thead><tr><th>Status</th><th>Description</th></tr></thead><tbody><tr><td>200</td><td>Transaction Accepted (But not guaranteed to have passed consensus yet)</td></tr><tr><td>400</td><td>Transaction Rejected (Malformed)</td></tr><tr><td>401</td><td>Transaction Rejected (Improperly signed)</td></tr></tbody></table><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>For more information on Parity SCALE Codec check <a href="https://docs.substrate.io/reference/scale-codec/" target="_blank" rel="noreferrer">Substrate Dev Hub</a> and codec&#39;s <a href="https://github.com/paritytech/parity-scale-codec" target="_blank" rel="noreferrer">GitHub repository</a>.</p><a href="#fnref1" class="footnote-backref">↩︎</a> <a href="#fnref1:1" class="footnote-backref">↩︎</a> <a href="#fnref1:2" class="footnote-backref">↩︎</a> <a href="#fnref1:3" class="footnote-backref">↩︎</a> <a href="#fnref1:4" class="footnote-backref">↩︎</a></li></ol></section>`,64),l=[t];function p(r,c,i,d,y,u){return n(),a("div",null,l)}const g=s(o,[["render",p]]);export{h as __pageData,g as default};
